{"version":3,"sources":["config/firebase.js","containers/Home/index.js","store/action/index.js","containers/Chat/index.js","config/router.js","App.js","reportWebVitals.js","store/reducer/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Home","this","props","dbData","onClick","facebookLogin","history","React","Component","connect","dispatch","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","user","CreateUser","name","displayName","email","profile","photoURL","uid","database","ref","child","set","console","log","push","type","payload","catch","error","errorMessage","message","users","on","data","val","Chat","userData","src","alt","map","index","width","state","CurrentUser","AppRouter","exact","path","component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f492be89.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/database'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAHtcis1LTGy4FVO06M_HOY-mzIlqxMQto\",\n    authDomain: \"chatappbyakif.firebaseapp.com\",\n    databaseURL: \"https://chatappbyakif.firebaseio.com\",\n    projectId: \"chatappbyakif\",\n    storageBucket: \"chatappbyakif.appspot.com\",\n    messagingSenderId: \"516465246737\",\n    appId: \"1:516465246737:web:fc1409fc3acdc27cfd67b0\",\n    measurementId: \"G-15E3NB1ZDQ\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport { dbData , facebookLogin } from '../../store/action';\n\n\nclass Home extends React.Component{\n  componentDidMount() {\n    this.props.dbData()\n  }\n  render(){\n    return(\n      <div>\n        <h1>Home</h1>\n        <button onClick={()=>this.props.facebookLogin(this.props.history)}>Facebook Login</button>\n      </div>\n    );\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => ({\nfacebookLogin: (history) => dispatch(facebookLogin(history)),\ndbData: () => dispatch(dbData()),\n})\n\nexport default connect(\nnull,\n  mapDispatchToProps)(Home);","import firebase from '../../config/firebase'\n//if firbase getting any error then use import firebase from firebase;\n// const set_data = () => {\n//     return (dispatch) => {\n//         console.log('running')\n//         dispatch({\n//             type: 'SETDATA',\n//             payload: {\n//                 name: 'Derllis Ertugrul',\n//                 email: 'derllisErtugrul@gmail.com'\n//             }\n//         })\n//     }\n// }\n\nconst facebookLogin = (history) => {\n    return (dispatch) => {\n        var provider = new firebase.auth.FacebookAuthProvider();\n        firebase.auth().signInWithPopup(provider)\n        .then(function(result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        // var token = result.credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        const CreateUser = {\n            name: user.displayName,\n            email: user.email,\n            profile: user.photoURL,\n            uid: user.uid,\n        }\n        firebase.database().ref('/').child(`user/${user.uid}`).set(CreateUser)\n        .then(console.log(`${user.displayName} Loged in successfully`))\n        console.log('user ==> ',user)\n        history.push('/chat')\n        dispatch({type:'CurrentUser',payload:CreateUser})\n        })\n        .catch(function(error) {\n        // Handle Errors here.\n        // var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        // var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        // var credential = error.credential;\n        console.log('error ==> ',errorMessage);\n        });\n    }\n}\n\nconst dbData = () => {\n    return (dispatch) => {\n    let users = []\n    firebase.database().ref('/').child('user').on('child_added',(data)=>{\n        users.push(data.val())\n    })\n    dispatch({type: 'DatabaseUsers',payload: users});\n    }\n}\n\nexport { dbData,facebookLogin }","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\n\nclass Chat extends Component {\n    render() {\n    const userData = this.props.user;\n    console.log(' Full Data ==> ', this.props);\n\n        return (\n            <div>\n                <img src={userData.profile}  alt='' />\n                <h3>{userData.name} Lets Begin!</h3>\n                <div>\n                    <div>\n                        <h3>Users:</h3>\n                        <ol>\n                            {this.props.users.map((data, index) => {return <li key={index}><img src={data.profile} width=\"20\" alt=''/>{data.name}<button>chat</button></li>})}\n                        </ol>   \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.CurrentUser,\n        users: state.users,\n    }\n\n)\n\n// const mapDispatchToProps = (dispatch) => ({\n//     dbData: () => dispatch(dbData()),\n// })\n    \nexport default connect(\nmapStateToProps,\nnull)(Chat);","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from '../containers/Home'\nimport Chat from '../containers/Chat'\n\nclass AppRouter extends React.Component{\n    render(){\n        return(\n            <Router>\n                <Route exact path='/' component={Home} />\n                <Route path='/chat' component={Chat} />\n            </Router>\n        )\n    }\n}\nexport default AppRouter;","import React from 'react';\nimport './App.css';\n// import {connect} from 'react-redux';\nimport AppRouter from './config/router'\n// import { set_data,facebookLogin } from './store/action';\n\n\nclass App extends React.Component{\n\n  render(){\n    // console.log(\"users => \",this.props.users)\n    return(\n      <div>\n        <h1 className='App'>ChatApp</h1>\n        <AppRouter/>\n        {/* <button onClick={()=>this.props.facebookLogin()}>Facebook Login</button> */}\n        {/* <button onClick={()=>this.props.set_data()}>set_data</button> */}\n      </div>\n    );\n  }\n\n}\nexport default App;\n\n// const mapStateToProps = (state) => (\n// {\n//     users: state.users\n// }\n// )\n// const mapDispatchToProps = (dispatch) => ({\n// set_data: () => dispatch(set_data()),\n// facebookLogin: () => dispatch(facebookLogin()),\n// })\n\n// *************if combine reducer**********\n// const mapStateToProps = (state) => (\n//   {\n//     username: state.auth.username,\n//     email: \"akif@gmail.com\",\n//     AppName: state.app.AppName\n//   }\n// )\n// const mapDispatchToProps = (dispatch) => ({\n//   set_data: (data) => dispatch(set_data(data))\n// })\n\n// export default connect(\n// mapStateToProps,\n// mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\n    users: [],\n    CurrentUser: {}\n};\n\nexport default (state = INITIAL_STATE, action) =>{\n    console.log('action => ',action)\n    switch (action.type) {\n        case 'CurrentUser':\n            return ({\n                ...state,\n                CurrentUser: action.payload\n            })\n        case 'DatabaseUsers':\n            return ({\n                ...state,\n                users: action.payload\n            })\n    }\n    return state;\n}","import reducer from './reducer'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store;\n\n// *********if combine reducer******\n// import reducer from './reducer'\n// // import { createStore } from 'redux'\n// import { createStore, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk'\n// // const store = createStore(reducer)\n// const store = createStore(reducer ,{} ,applyMiddleware(thunk))\n\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}